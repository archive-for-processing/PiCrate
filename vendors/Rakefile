# frozen_string_literal: true

require 'fileutils'
require 'rake/clean'

WARNING = 'WARNING: wget download failed you could do a manual download'
SOUND = 'sound.zip'
SOUND_VERSION = 'v1.3.2'
GLVIDEO = 'processing-glvideo.zip'
VIDEO = 'video-2.zip'
VIDEO_VERSION = '2'
EXAMPLES = '0.2.0'
HOME_DIR = ENV['HOME']
CLOBBER.include(EXAMPLES, SOUND, GLVIDEO, VIDEO)

desc 'download, and copy picrate examples'
task default: [:download_and_copy_samples]

desc 'download and copy examples to user home'
task download_and_copy_samples: %i[download_examples copy_examples config_geany]

task :download_examples
file_name = "#{EXAMPLES}.tar.gz"
wget_base = 'wget https://github.com/ruby-processing/picrate-examples'
wget_string = [wget_base, 'archive', file_name].join('/')
file file_name do
  begin
    sh wget_string
  rescue
    warn(WARNING)
  end
end

desc 'download and copy sound library to ~/.picrate'
task download_and_copy_sound: %i[init_dir download_sound copy_sound clobber]

desc 'download and copy video library to ~/.picrate'
task download_and_copy_video: %i[init_dir download_video copy_video clobber]

desc 'download and copy glvideo library to ~/.picrate'
task download_and_copy_glvideo: %i[init_dir download_glvideo copy_glvideo clobber]

desc 'download sound library'
task :download_sound do
  wget_base = 'wget https://github.com/processing/processing-sound/'
  wget_string = [wget_base, 'releases/download/latest', SOUND].join('/')
  begin
    sh wget_string
  rescue
    puts 'Not Currently Available'
    # warn(WARNING)
  end
end

desc 'download glvideo library'
task :download_glvideo do
  wget_base = 'wget https://github.com/gohai/processing-glvideo'
  wget_string = [wget_base, 'releases/download/latest', GLVIDEO].join('/')
  begin
    sh wget_string
  rescue
    warn(WARNING)
  end
end

desc 'download video library'
task :download_video do
  wget_base = 'wget https://github.com/processing/processing-video'
  wget_string = [wget_base, 'releases/download', VIDEO_VERSION, VIDEO].join('/')
  begin
    sh wget_string
  rescue
    warn(WARNING)
  end
end

desc 'initialize ~/.picrate directories'
task :init_dir do
  unless File.exist? "#{HOME_DIR}/.picrate/libraries"
    FileUtils.mkdir_p "#{HOME_DIR}/.picrate/libraries"
  end
end

desc 'configure geany'
task :config_geany do
  unless File.exist? "#{HOME_DIR}/.config/geany/templates/files/picrate.rb"
    FileUtils.mkdir_p "#{HOME_DIR}/.config/geany/templates/files"
    FileUtils.cp 'picrate.rb' "#{HOME_DIR}/.config/geany/templates/files"
  end
  unless File.exist? "#{HOME_DIR}/projects/picrate.geany"
    FileUtils.mkdir_p "#{HOME_DIR}/projects"
    FileUtils.cp 'picrate.geany', "#{HOME_DIR}/projects"
  end
end

desc 'copy examples'
task copy_examples: file_name do
  sh "tar xzvf #{EXAMPLES}.tar.gz"
  FileUtils.rm_r "#{HOME_DIR}/picrate_samples" if File.exist? "#{HOME_DIR}/picrate_samples"
  FileUtils.cp_r "picrate-examples-#{EXAMPLES}", "#{HOME_DIR}/picrate_samples"
  FileUtils.rm_r "picrate-examples-#{EXAMPLES}"
end

desc 'copy sound library'
task copy_sound: SOUND do
  sh "unzip #{SOUND}"
  FileUtils.rm_r "#{HOME_DIR}/.picrate/libraries/sound" if File.exist? "#{HOME_DIR}/.picrate/libraries/sound"
  FileUtils.cp_r 'sound', "#{HOME_DIR}/.picrate/libraries"
  FileUtils.rm_r 'sound'
  FileUtils.rm_r '__MACOSX'
end

desc 'copy video library'
task copy_video: VIDEO do
  sh "unzip #{VIDEO}"
  FileUtils.rm_r "#{HOME_DIR}/.picrate/libraries/video" if File.exist? "#{HOME_DIR}/.picrate/libraries/video"
  FileUtils.cp_r 'video', "#{HOME_DIR}/.picrate/libraries/video"
  FileUtils.rm_r 'video'
end

desc 'copy glvideo library'
task copy_glvideo: GLVIDEO do
  directory "#{HOME_DIR}/.picrate/libraries/glvideo"
  sh "unzip #{GLVIDEO}"
  FileUtils.rm_r "#{HOME_DIR}/.picrate/libraries/glvideo" if File.exist? "#{HOME_DIR}/.picrate/libraries/glvideo"
  FileUtils.cp_r 'glvideo', "#{HOME_DIR}/.picrate/libraries/glvideo"
  FileUtils.rm_r 'glvideo'
end
